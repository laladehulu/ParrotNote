{"version":3,"sources":["components/NavigationBar.js","components/ListItemComponents/Question.js","components/Tabs.js","components/QuestionNote.js","components/ListItemComponents/Info.js","components/Information.js","components/Video.js","components/NoteTab.js","components/SectionMaker.js","components/Note.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","className","expand","Brand","href","Nav","Link","NavDropdown","title","id","Item","Divider","Component","Question","this","props","index","question","text","Tabs","state","selected","handleOnClick","e","setState","target","getAttribute","changeSelected","data-target","onClick","QuestionProp","timeStamp","QuestionNote","updateScrollBar","questionsContainer","document","querySelector","console","log","scrollTop","scrollHeight","handleTextChange","currentText","value","submitChangelocal","setTimeout","questions","setStateGlobal","updateQuestion","qs","push","prevProps","activeTab","map","q","key","htmlFor","name","onChange","type","Info","CreateInfo","Information","informations","Video","prop","handleChange","event","link","match","RegExp","exec","style","margin","placeholder","boxSizing","frameborder","scrolling","marginheight","marginwidth","width","height","src","findVideoSource","NoteTab","VideoTitle","sections","setTitle","newTitle","submitData","JSON","stringify","fetch","headers","method","body","then","response","status","window","open","location","hostname","setCurrentSelectionData","data","prevState","newCurrentSection","changeTab","selectedTab","Note","currentSection","allowfullscreen","App","textAlign","Boolean","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.709e2428.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Navbar,Nav,NavDropdown } from 'react-bootstrap';\r\nexport class NavigationBar extends Component {\r\n    static propTypes = {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className='navbar'  expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">Parrot Note</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#link\">About</Nav.Link>\r\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                 <NavDropdown.Divider />\r\n                 <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default NavigationBar\r\n","import React, { Component } from 'react'\r\n\r\nexport class Question extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"question-display\">\r\n                \r\n                <p><span >{this.props.index}</span> {this.props.question.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Question from './ListItemComponents/Question';\r\n\r\nexport default class Tabs extends Component {\r\n    constructor(){\r\n        super();\r\n \r\n    }\r\n    state={\r\n        selected:'questions'\r\n    }\r\n    handleOnClick=(e)=>{\r\n        this.setState({selected:e.target.getAttribute('data-target')});\r\n        this.props.changeSelected(e.target.getAttribute('data-target'));\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bar\">\r\n                <span data-target={\"questions\"} className={`tab ${this.state.selected=='questions'?'selected':''} `}  onClick={this.handleOnClick} >Questions </span> \r\n                <span data-target={\"informations\"}  className={`tab ${this.state.selected=='informations'?'selected':''} ` } onClick={this.handleOnClick}>Informations </span> \r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport Question from './ListItemComponents/Question.js'\r\nimport Tabs from './Tabs.js'\r\nfunction QuestionProp(timeStamp, text){\r\n    this.timeStamp = timeStamp;\r\n    this.text = text;\r\n}\r\n\r\nexport class QuestionNote extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentText :\" \",\r\n           questions:(()=>{\r\n            let qs = [];\r\n            qs.push(new QuestionProp(2.5,\"hello\"))\r\n            return qs;\r\n        })()\r\n        }\r\n\r\n      }\r\nupdateScrollBar =()=>{\r\n    this.questionsContainer = this.questionsContainer||document.querySelector('.questions');\r\n    console.log(this.questionsContainer);\r\n    this.questionsContainer.scrollTop= this.questionsContainer.scrollHeight+300;\r\n}\r\n handleTextChange =(e)=>{\r\n        this.setState({currentText:e.target.value});\r\n    \r\n    }\r\nsubmitChangelocal = (e)=>{\r\n        this.setState((state,props)=>{\r\n\r\n            setTimeout(this.updateScrollBar,50);\r\n            return{\r\n            questions:[...state.questions,new QuestionProp(0.1,state.currentText)],\r\n            currentText : \" \"}\r\n            \r\n        },()=>{this.props.setStateGlobal(\"questions\",this.state.questions)});\r\n    //make the scroll bar go to the bottom when the user added a new question\r\n    }\r\nupdateQuestion=()=>{\r\n    this.setState((state,props)=>{\r\n\r\n        return{\r\n        questions:props.questions}\r\n        \r\n    })//set the data in NoteTab.js to this new data after update)\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    if (prevProps.questions != this.props.questions&&this.props.questions) {\r\n        this.updateQuestion();//update question if tab switched\r\n    }\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className={`container-basic  ${this.props.activeTab=='questions'?'container-active':''}`}>\r\n         \r\n              \r\n                <div className=\"questions\">\r\n                    {this.state.questions.map((q,index)=><Question key={index}index={index} question={q}></Question>)}\r\n                </div>\r\n                <div className=\"question-input\">\r\n\r\n                <label htmlFor=\"questioninput\">Question:</label>\r\n                <textarea name=\"questioninput\" className=\"question-input__textarea\" value={this.state.currentText} onChange={this.handleTextChange}/>\r\n                <input onClick={this.submitChangelocal} type='submit' className=\"regular-button regular-button-light\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionNote\r\n","import React, { Component } from 'react'\r\n\r\nexport class Info extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"question-display\">\r\n                \r\n                <p><span >{this.props.index}</span> {this.props.question.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Info;\r\n"," import React, { Component } from 'react'\r\n\r\n import Info from './ListItemComponents/Info'\r\n function CreateInfo(timeStamp, text){\r\n    this.timeStamp = timeStamp;\r\n    this.text = text;\r\n };\r\n export class Information extends Component {\r\n     submitChangelocal = ()=>{\r\n        this.setState((state,props)=>{\r\n           //setTimeout(this.updateScrollBar,50);\r\n           \r\n            return{\r\n            informations:[...state.informations,new CreateInfo(0.1,state.currentText)],\r\n            currentText : \" \"}\r\n            \r\n        },()=>{this.props.setStateGlobal(\"informations\",this.state.informations)})//set the data in NoteTab.js to this new data after update\r\n\r\n        //asynchrounous operation\r\n     }//Change the display of the information locally\r\n     handleTextChange =(e)=>{\r\n        this.setState({currentText:e.target.value});\r\n    }\r\n     state = {\r\n         currentText:\"\",\r\n         informations:[]\r\n     }\r\n     render() {\r\n         return (\r\n             <div className={`container-basic  ${this.props.activeTab=='informations'?'container-active':''} `}>\r\n                <div className=\"questions\">\r\n                    {this.state.informations.map((q,index)=><Info key={index}index={index} question={q}></Info>)}\r\n                \r\n                </div>\r\n\r\n                <div className=\"question-input\">\r\n                 <label htmlFor=\"informationinput\">Information:</label>\r\n                <textarea name=\"informatuoninput\" className=\"question-input__textarea\" value={this.state.currentText} onChange={this.handleTextChange}/>\r\n                <input onClick={this.submitChangelocal} type='submit' className=\"regular-button regular-button-light\"/>\r\n                </div>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n \r\n export default Information\r\n ","import React, { Component } from 'react'\r\n\r\nexport class Video extends Component {\r\n    constructor(prop){\r\n        super(prop);\r\n        this.state = {link: ''};\r\n    }\r\n    handleChange=(event)=>{\r\n        this.setState({link: event.target.value});\r\n        \r\n    }//extract query string from youtube url and put it on the iframe\r\n    findVideoSource(){\r\n        const str = 'v=(.+)$'\r\n        const regex = new RegExp(str,'gi');\r\n        const match =regex.exec(this.state.link);\r\n        console.log(match);\r\n        return match?`https://www.youtube.com/embed/${match[1]}`:'';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"video-root\">\r\n                <div>\r\n                    <p style={{margin:\"0 0 3px 20px\"}}>  put the youtube video's link here</p>\r\n\r\n                    <input className=\"video-url\" type=\"text\" placeholder=\"https://www.youtube.com/watch?v=ewLpXw6uN28\" style={{margin:'0 20px 2px 20px', boxSizing: 'border-box'}} value={this.state.link} onChange={this.handleChange} />\r\n                </div>\r\n            <iframe className='video' frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"width=\"788.54\" height=\"443\"\r\n             type=\"text/html\" \r\n             src={this.findVideoSource()}>\r\n                 <div><small><a href=\"https://youtubeembedcode.com/de/\">youtubeembedcode.com/de/</a></small></div><div><small><a href=\"http://add-link-exchange.com\">addlink-exchange</a></small></div><div><small><a href=\"https://youtubeembedcode.com/es/\">youtubeembedcode.com/es/</a></small></div><div><small><a href=\"http://add-link-exchange.com\">www://add-link-exchange.com</a></small></div><div><small><a href=\"https://youtubeembedcode.com/nl/\">youtubeembedcode.com/nl/</a></small></div><div><small><a href=\"http://add-link-exchange.com\">www://add-link-exchange.com</a></small></div><div><small><a href=\"https://youtubeembedcode.com/es/\">youtubeembedcode es</a></small></div><div><small><a href=\"http://add-link-exchange.com\">Add-link-exchange</a></small></div><div><small><a href=\"https://youtubeembedcode.com/de/\">youtubeembedcode de</a></small></div><div><small><a href=\"http://add-link-exchange.com\">ww://add-link-exchange.com</a></small></div></iframe>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Video\r\n","import React, { Component } from 'react'\r\nimport Tabs from './Tabs';\r\nimport QuestionNote from './QuestionNote';\r\nimport Information from './Information';\r\n\r\nexport class NoteTab extends Component {\r\n    state={\r\n        VideoTitle:'',\r\n        activeTab:\"questions\",\r\n        sections:{\r\n        \r\n         }\r\n        \r\n        }\r\n        setTitle = (newTitle)=>{\r\n            this.setState({\r\n                VideoTitle:newTitle\r\n            });\r\n        }\r\n        submitData = ()=>{\r\n            console.log(JSON.stringify(this.state));\r\n            fetch('/api/datatopdf', {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                method: 'POST',\r\n         \r\n                body: JSON.stringify(this.state)\r\n              }).then(response=>{\r\n                  console.log(\"responded\");\r\n                  if(response.status==200){\r\n                      window.open('http://'+window.location.hostname+':25565/api/downloads/127_0_0_1.pdf','_blank');\r\n                  }\r\n              });\r\n        }\r\n    render() {\r\n        return (\r\n            <div className=\"question-root\">\r\n    \r\n                <Tabs changeSelected={this.changeTab }></Tabs>\r\n                 <QuestionNote setStateGlobal={this.setCurrentSelectionData} activeTab={this.state.activeTab} questions={this.state.sections.questions} />\r\n                 <Information setStateGlobal={this.setCurrentSelectionData} activeTab={this.state.activeTab} informations={this.state.sections.informations} ></Information>\r\n                 <button style={{margin:'0 0 0 25%', width:'50%'}}className='regular-button regular-button-light' onClick={this.submitData}>PDF</button>\r\n            </div>\r\n        )\r\n    }\r\n    setCurrentSelectionData= (type,data)=>{//The sub tabs will update the data in the this.state by calling this function\r\n        this.setState((prevState, props) => {\r\n            let newCurrentSection = prevState.sections;\r\n            newCurrentSection[type] = data;\r\n            return {\r\n                sections:newCurrentSection\r\n            }\r\n          });\r\n    }\r\n    changeTab=(selectedTab)=>{\r\n        this.setState({activeTab:selectedTab});\r\n    }//Change tab when the tab button of the tabs are clicked\r\n}\r\n\r\nexport default NoteTab\r\n","import React, { Component } from 'react'\r\n\r\nexport class SectionMaker extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SectionMaker\r\n","import React, { Component } from 'react'\r\nimport QuestionNote from './QuestionNote.js'\r\nimport Information from './Information.js'\r\nimport Video from './Video'\r\nimport SectionMaker from './SectionMaker.js'\r\nimport NoteTab from './NoteTab.js'\r\n\r\n\r\nexport class Note extends Component {\r\n    state={\r\n        currentSection:{\r\n            \r\n        }   \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"note\">\r\n                <NoteTab></NoteTab>\r\n                <Video/>\r\n               \r\n   \r\n            <div style={{margin:\"50px\"}}>\r\n                This is an amazing book written by my friend. Please kindly consider reading it as you may find it very enjoyable!\r\n                <iframe width=\"500\" height=\"280\" \r\n                frameborder=\"0\" allowfullscreen=\"\" \r\n                src=\"https://embed.wattpad.com/story/158975822\" ></iframe>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Note\r\n","import { createFactory } from 'react';\n\nimport React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PropTypes from 'prop-types'\nimport NavigationBar from './components/NavigationBar.js'\nimport Note from './components/Note';\nimport './App.css';\nimport './components/Note.css'\nimport './components/Information.css'\nimport './components/SectionMaker.css'\nimport './components/Video.css'\nimport './components/Tabs.css'\nexport default class App extends Component {\n  static propTypes = {\n    \n  }\n\n  render() {\n    return (\n      <div>\n      <NavigationBar/>\n      <h5>This is an app that helps you take note while watching youtube tutorials, you can input questions and informations </h5>\n      <h5>\n        Click on that PDF button after you are done to get your note.\n      </h5>\n      <p style={{textAlign:\"center\"}}>This is still in a very early stage of development, so please save(click PDF button) often as you use it!</p>\n      \n      <Note/>\n     \n      </div>\n    )\n  }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './components/Note.css'\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}